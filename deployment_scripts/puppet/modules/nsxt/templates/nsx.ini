[nsx_v3]
# IP address of one or more NSX managers separated by commas.
# The IP address should be of the form:
#   [<scheme>://]<ip_adress>[:<port>]
# If scheme is not provided https is used. If port is not provided
# port 80 is used for http and port 443 for https.
nsx_api_managers = 

# User name of NSX Manager
nsx_api_user = 

# Password of NSX Manager
nsx_api_password = 

# UUID of the default NSX overlay transport zone that will be used for creating
# tunneled isolated Neutron networks. If no physical network is specified when
# creating a logical network, this transport zone will be used by default
default_overlay_tz_uuid = 

# (Optional) Only required when creating VLAN or flat provider networks. UUID
# of default NSX VLAN transport zone that will be used for bridging between
# Neutron networks, if no physical network has been specified
default_vlan_tz_uuid = 

# Default Edge Cluster Identifier
default_edge_cluster_uuid = 

# Specify a CA bundle file to use in verifying the NSX Manager
# server certificate. This option is ignored if "insecure" is set to True.
# If "insecure" is set to False and ca_file is unset, the system root CAs
# will be used to verify the server certificate.
# ca_file =

# If true, the NSX Manager server certificate is not verified. If false
# the CA bundle specified via "ca_file" will be used or if unset the
# default system root CAs will be used.
# insecure = True

# The time in seconds before aborting a HTTP connection to a NSX manager.
http_timeout = 10

# The time in seconds before aborting a HTTP read response from a NSX manager.
http_read_timeout = 180

# Maximum number of times to retry a HTTP connection.
http_retries = 3

# Maximum number of connection connections to each NSX manager.
concurrent_connections = 10

# The amount of time in seconds to wait before ensuring connectivity to
# the NSX manager if no manager connection has been used.
conn_idle_timeout = 10

# UUID of the default tier0 router that will be used for connecting to
# tier1 logical routers and configuring external networks
default_tier0_router_uuid = 

# (Optional) UUID of the default NSX bridge cluster that will be used to
# perform L2 gateway bridging between VXLAN and VLAN networks. It is an
# optional field. If default bridge cluster UUID is not specified, admin will
# have to manually create a L2 gateway corresponding to a NSX Bridge Cluster
# using L2 gateway APIs. This field must be specified on one of the active
# neutron servers only.
# default_bridge_cluster_uuid =

# (Optional) The number of nested groups which are used by the plugin,
# each Neutron security-groups is added to one nested group, and each nested
# group can contain as maximum as 500 security-groups, therefore, the maximum
# number of security groups that can be created is
# 500 * number_of_nested_groups.
# The default is 8 nested groups, which allows a maximum of 4k security-groups,
# to allow creation of more security-groups, modify this figure.
# number_of_nested_groups =

# Acceptable values for 'metadata_mode' are:
#   - 'access_network': this enables a dedicated connection to the metadata
#     proxy for metadata server access via Neutron router.
#   - 'dhcp_host_route': this enables host route injection via the dhcp agent.
# This option is only useful if running on a host that does not support
# namespaces otherwise access_network should be used.
# metadata_mode = access_network

# If True, an internal metadata network will be created for a router only when
# the router is attached to a DHCP-disabled subnet.
# metadata_on_demand = False
